version: "3.9"

services:
  api:
    # sua build custom (mantida)
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped

    # Em Dokploy NÃO publique portas; apenas exponha a interna.
    # O domínio do Dokploy apontará para a 3080.
    expose:
      - "3080"

    environment:
      NODE_ENV: production
      # Essenciais para o proxy do Dokploy alcançar o app
      HOST: 0.0.0.0
      PORT: 3080

      # Artefacts/Sandpack internos do LibreChat
      SANDBOX: "true"
      SANDBOX_URL: http://sandbox:3080

      # URL pública do seu bundler (defina no Dokploy ou no .env do Compose).
      # Ex.: https://bundler-xxxx.traefik.me  (recomendado criar outro app p/ expor o bundler)
      SANDPACK_BUNDLER_URL: ${SANDPACK_BUNDLER_URL:-}

      # (Opcional) se um dia auto-hospedar o static-browser-server:
      # SANDPACK_STATIC_BUNDLER_URL: ${SANDPACK_STATIC_BUNDLER_URL:-}

    volumes:
      - ./.env:/app/.env
      - ./custom/librechat.yaml:/app/config/librechat.yaml
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs

    depends_on:
      - sandbox
      - sandpack-bundler

    # ❌ REMOVIDO: labels do Traefik (Dokploy já faz o roteamento)
    # ❌ REMOVIDO: ports: "3080:3080" (não publicar portas no host no Dokploy)

  sandbox:
    image: librechat/sandbox:latest
    restart: unless-stopped
    environment:
      NODE_ENV: production
    expose:
      - "3080"
    # (se quiser depurar local, pode publicar porta aqui num ambiente fora do Dokploy)

  # Bundler do Sandpack (Codesandbox client)
  sandpack-bundler:
    image: ghcr.io/librechat-ai/codesandbox-client/bundler:latest
    restart: unless-stopped
    expose:
      - "80"
    # ❌ REMOVIDO: labels do Traefik (não serão usados pelo Dokploy)
    # (Ver notas abaixo para expor esse serviço com HTTPS)
